package com.keymane.domain.accounts;

import com.keymane.domain.BaseExampleObject;
import java.lang.reflect.Method;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class UserExample extends BaseExampleObject {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table accounts.users
     *
     * @mbggenerated Wed Jun 29 14:01:54 EAT 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table accounts.users
     *
     * @mbggenerated Wed Jun 29 14:01:54 EAT 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table accounts.users
     *
     * @mbggenerated Wed Jun 29 14:01:54 EAT 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accounts.users
     *
     * @mbggenerated Wed Jun 29 14:01:54 EAT 2016
     */
    public UserExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accounts.users
     *
     * @mbggenerated Wed Jun 29 14:01:54 EAT 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accounts.users
     *
     * @mbggenerated Wed Jun 29 14:01:54 EAT 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accounts.users
     *
     * @mbggenerated Wed Jun 29 14:01:54 EAT 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accounts.users
     *
     * @mbggenerated Wed Jun 29 14:01:54 EAT 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accounts.users
     *
     * @mbggenerated Wed Jun 29 14:01:54 EAT 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accounts.users
     *
     * @mbggenerated Wed Jun 29 14:01:54 EAT 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accounts.users
     *
     * @mbggenerated Wed Jun 29 14:01:54 EAT 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accounts.users
     *
     * @mbggenerated Wed Jun 29 14:01:54 EAT 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accounts.users
     *
     * @mbggenerated Wed Jun 29 14:01:54 EAT 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accounts.users
     *
     * @mbggenerated Wed Jun 29 14:01:54 EAT 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table accounts.users
     *
     * @mbggenerated Wed Jun 29 14:01:54 EAT 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNationalIdIsNull() {
            addCriterion("national_id is null");
            return (Criteria) this;
        }

        public Criteria andNationalIdIsNotNull() {
            addCriterion("national_id is not null");
            return (Criteria) this;
        }

        public Criteria andNationalIdEqualTo(Integer value) {
            addCriterion("national_id =", value, "nationalId");
            return (Criteria) this;
        }

        public Criteria andNationalIdNotEqualTo(Integer value) {
            addCriterion("national_id <>", value, "nationalId");
            return (Criteria) this;
        }

        public Criteria andNationalIdGreaterThan(Integer value) {
            addCriterion("national_id >", value, "nationalId");
            return (Criteria) this;
        }

        public Criteria andNationalIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("national_id >=", value, "nationalId");
            return (Criteria) this;
        }

        public Criteria andNationalIdLessThan(Integer value) {
            addCriterion("national_id <", value, "nationalId");
            return (Criteria) this;
        }

        public Criteria andNationalIdLessThanOrEqualTo(Integer value) {
            addCriterion("national_id <=", value, "nationalId");
            return (Criteria) this;
        }

        public Criteria andNationalIdIn(List<Integer> values) {
            addCriterion("national_id in", values, "nationalId");
            return (Criteria) this;
        }

        public Criteria andNationalIdNotIn(List<Integer> values) {
            addCriterion("national_id not in", values, "nationalId");
            return (Criteria) this;
        }

        public Criteria andNationalIdBetween(Integer value1, Integer value2) {
            addCriterion("national_id between", value1, value2, "nationalId");
            return (Criteria) this;
        }

        public Criteria andNationalIdNotBetween(Integer value1, Integer value2) {
            addCriterion("national_id not between", value1, value2, "nationalId");
            return (Criteria) this;
        }

        public Criteria andEmailIsNull() {
            addCriterion("email is null");
            return (Criteria) this;
        }

        public Criteria andEmailIsNotNull() {
            addCriterion("email is not null");
            return (Criteria) this;
        }

        public Criteria andEmailEqualTo(String value) {
            addCriterion("email =", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotEqualTo(String value) {
            addCriterion("email <>", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailGreaterThan(String value) {
            addCriterion("email >", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailGreaterThanOrEqualTo(String value) {
            addCriterion("email >=", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailLessThan(String value) {
            addCriterion("email <", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailLessThanOrEqualTo(String value) {
            addCriterion("email <=", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailLike(String value) {
            addCriterion("email like", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotLike(String value) {
            addCriterion("email not like", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailIn(List<String> values) {
            addCriterion("email in", values, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotIn(List<String> values) {
            addCriterion("email not in", values, "email");
            return (Criteria) this;
        }

        public Criteria andEmailBetween(String value1, String value2) {
            addCriterion("email between", value1, value2, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotBetween(String value1, String value2) {
            addCriterion("email not between", value1, value2, "email");
            return (Criteria) this;
        }

        public Criteria andFirstNameIsNull() {
            addCriterion("first_name is null");
            return (Criteria) this;
        }

        public Criteria andFirstNameIsNotNull() {
            addCriterion("first_name is not null");
            return (Criteria) this;
        }

        public Criteria andFirstNameEqualTo(String value) {
            addCriterion("first_name =", value, "firstName");
            return (Criteria) this;
        }

        public Criteria andFirstNameNotEqualTo(String value) {
            addCriterion("first_name <>", value, "firstName");
            return (Criteria) this;
        }

        public Criteria andFirstNameGreaterThan(String value) {
            addCriterion("first_name >", value, "firstName");
            return (Criteria) this;
        }

        public Criteria andFirstNameGreaterThanOrEqualTo(String value) {
            addCriterion("first_name >=", value, "firstName");
            return (Criteria) this;
        }

        public Criteria andFirstNameLessThan(String value) {
            addCriterion("first_name <", value, "firstName");
            return (Criteria) this;
        }

        public Criteria andFirstNameLessThanOrEqualTo(String value) {
            addCriterion("first_name <=", value, "firstName");
            return (Criteria) this;
        }

        public Criteria andFirstNameLike(String value) {
            addCriterion("first_name like", value, "firstName");
            return (Criteria) this;
        }

        public Criteria andFirstNameNotLike(String value) {
            addCriterion("first_name not like", value, "firstName");
            return (Criteria) this;
        }

        public Criteria andFirstNameIn(List<String> values) {
            addCriterion("first_name in", values, "firstName");
            return (Criteria) this;
        }

        public Criteria andFirstNameNotIn(List<String> values) {
            addCriterion("first_name not in", values, "firstName");
            return (Criteria) this;
        }

        public Criteria andFirstNameBetween(String value1, String value2) {
            addCriterion("first_name between", value1, value2, "firstName");
            return (Criteria) this;
        }

        public Criteria andFirstNameNotBetween(String value1, String value2) {
            addCriterion("first_name not between", value1, value2, "firstName");
            return (Criteria) this;
        }

        public Criteria andLastNameIsNull() {
            addCriterion("last_name is null");
            return (Criteria) this;
        }

        public Criteria andLastNameIsNotNull() {
            addCriterion("last_name is not null");
            return (Criteria) this;
        }

        public Criteria andLastNameEqualTo(String value) {
            addCriterion("last_name =", value, "lastName");
            return (Criteria) this;
        }

        public Criteria andLastNameNotEqualTo(String value) {
            addCriterion("last_name <>", value, "lastName");
            return (Criteria) this;
        }

        public Criteria andLastNameGreaterThan(String value) {
            addCriterion("last_name >", value, "lastName");
            return (Criteria) this;
        }

        public Criteria andLastNameGreaterThanOrEqualTo(String value) {
            addCriterion("last_name >=", value, "lastName");
            return (Criteria) this;
        }

        public Criteria andLastNameLessThan(String value) {
            addCriterion("last_name <", value, "lastName");
            return (Criteria) this;
        }

        public Criteria andLastNameLessThanOrEqualTo(String value) {
            addCriterion("last_name <=", value, "lastName");
            return (Criteria) this;
        }

        public Criteria andLastNameLike(String value) {
            addCriterion("last_name like", value, "lastName");
            return (Criteria) this;
        }

        public Criteria andLastNameNotLike(String value) {
            addCriterion("last_name not like", value, "lastName");
            return (Criteria) this;
        }

        public Criteria andLastNameIn(List<String> values) {
            addCriterion("last_name in", values, "lastName");
            return (Criteria) this;
        }

        public Criteria andLastNameNotIn(List<String> values) {
            addCriterion("last_name not in", values, "lastName");
            return (Criteria) this;
        }

        public Criteria andLastNameBetween(String value1, String value2) {
            addCriterion("last_name between", value1, value2, "lastName");
            return (Criteria) this;
        }

        public Criteria andLastNameNotBetween(String value1, String value2) {
            addCriterion("last_name not between", value1, value2, "lastName");
            return (Criteria) this;
        }

        public Criteria andPhoneNumberIsNull() {
            addCriterion("phone_number is null");
            return (Criteria) this;
        }

        public Criteria andPhoneNumberIsNotNull() {
            addCriterion("phone_number is not null");
            return (Criteria) this;
        }

        public Criteria andPhoneNumberEqualTo(String value) {
            addCriterion("phone_number =", value, "phoneNumber");
            return (Criteria) this;
        }

        public Criteria andPhoneNumberNotEqualTo(String value) {
            addCriterion("phone_number <>", value, "phoneNumber");
            return (Criteria) this;
        }

        public Criteria andPhoneNumberGreaterThan(String value) {
            addCriterion("phone_number >", value, "phoneNumber");
            return (Criteria) this;
        }

        public Criteria andPhoneNumberGreaterThanOrEqualTo(String value) {
            addCriterion("phone_number >=", value, "phoneNumber");
            return (Criteria) this;
        }

        public Criteria andPhoneNumberLessThan(String value) {
            addCriterion("phone_number <", value, "phoneNumber");
            return (Criteria) this;
        }

        public Criteria andPhoneNumberLessThanOrEqualTo(String value) {
            addCriterion("phone_number <=", value, "phoneNumber");
            return (Criteria) this;
        }

        public Criteria andPhoneNumberLike(String value) {
            addCriterion("phone_number like", value, "phoneNumber");
            return (Criteria) this;
        }

        public Criteria andPhoneNumberNotLike(String value) {
            addCriterion("phone_number not like", value, "phoneNumber");
            return (Criteria) this;
        }

        public Criteria andPhoneNumberIn(List<String> values) {
            addCriterion("phone_number in", values, "phoneNumber");
            return (Criteria) this;
        }

        public Criteria andPhoneNumberNotIn(List<String> values) {
            addCriterion("phone_number not in", values, "phoneNumber");
            return (Criteria) this;
        }

        public Criteria andPhoneNumberBetween(String value1, String value2) {
            addCriterion("phone_number between", value1, value2, "phoneNumber");
            return (Criteria) this;
        }

        public Criteria andPhoneNumberNotBetween(String value1, String value2) {
            addCriterion("phone_number not between", value1, value2, "phoneNumber");
            return (Criteria) this;
        }

        public Criteria andEncryptedPasswordIsNull() {
            addCriterion("encrypted_password is null");
            return (Criteria) this;
        }

        public Criteria andEncryptedPasswordIsNotNull() {
            addCriterion("encrypted_password is not null");
            return (Criteria) this;
        }

        public Criteria andEncryptedPasswordEqualTo(String value) {
            addCriterion("encrypted_password =", value, "encryptedPassword");
            return (Criteria) this;
        }

        public Criteria andEncryptedPasswordNotEqualTo(String value) {
            addCriterion("encrypted_password <>", value, "encryptedPassword");
            return (Criteria) this;
        }

        public Criteria andEncryptedPasswordGreaterThan(String value) {
            addCriterion("encrypted_password >", value, "encryptedPassword");
            return (Criteria) this;
        }

        public Criteria andEncryptedPasswordGreaterThanOrEqualTo(String value) {
            addCriterion("encrypted_password >=", value, "encryptedPassword");
            return (Criteria) this;
        }

        public Criteria andEncryptedPasswordLessThan(String value) {
            addCriterion("encrypted_password <", value, "encryptedPassword");
            return (Criteria) this;
        }

        public Criteria andEncryptedPasswordLessThanOrEqualTo(String value) {
            addCriterion("encrypted_password <=", value, "encryptedPassword");
            return (Criteria) this;
        }

        public Criteria andEncryptedPasswordLike(String value) {
            addCriterion("encrypted_password like", value, "encryptedPassword");
            return (Criteria) this;
        }

        public Criteria andEncryptedPasswordNotLike(String value) {
            addCriterion("encrypted_password not like", value, "encryptedPassword");
            return (Criteria) this;
        }

        public Criteria andEncryptedPasswordIn(List<String> values) {
            addCriterion("encrypted_password in", values, "encryptedPassword");
            return (Criteria) this;
        }

        public Criteria andEncryptedPasswordNotIn(List<String> values) {
            addCriterion("encrypted_password not in", values, "encryptedPassword");
            return (Criteria) this;
        }

        public Criteria andEncryptedPasswordBetween(String value1, String value2) {
            addCriterion("encrypted_password between", value1, value2, "encryptedPassword");
            return (Criteria) this;
        }

        public Criteria andEncryptedPasswordNotBetween(String value1, String value2) {
            addCriterion("encrypted_password not between", value1, value2, "encryptedPassword");
            return (Criteria) this;
        }

        public Criteria andSaltIsNull() {
            addCriterion("salt is null");
            return (Criteria) this;
        }

        public Criteria andSaltIsNotNull() {
            addCriterion("salt is not null");
            return (Criteria) this;
        }

        public Criteria andSaltEqualTo(String value) {
            addCriterion("salt =", value, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltNotEqualTo(String value) {
            addCriterion("salt <>", value, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltGreaterThan(String value) {
            addCriterion("salt >", value, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltGreaterThanOrEqualTo(String value) {
            addCriterion("salt >=", value, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltLessThan(String value) {
            addCriterion("salt <", value, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltLessThanOrEqualTo(String value) {
            addCriterion("salt <=", value, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltLike(String value) {
            addCriterion("salt like", value, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltNotLike(String value) {
            addCriterion("salt not like", value, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltIn(List<String> values) {
            addCriterion("salt in", values, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltNotIn(List<String> values) {
            addCriterion("salt not in", values, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltBetween(String value1, String value2) {
            addCriterion("salt between", value1, value2, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltNotBetween(String value1, String value2) {
            addCriterion("salt not between", value1, value2, "salt");
            return (Criteria) this;
        }

        public Criteria andLastLoginIsNull() {
            addCriterion("last_login is null");
            return (Criteria) this;
        }

        public Criteria andLastLoginIsNotNull() {
            addCriterion("last_login is not null");
            return (Criteria) this;
        }

        public Criteria andLastLoginEqualTo(Date value) {
            addCriterion("last_login =", value, "lastLogin");
            return (Criteria) this;
        }

        public Criteria andLastLoginNotEqualTo(Date value) {
            addCriterion("last_login <>", value, "lastLogin");
            return (Criteria) this;
        }

        public Criteria andLastLoginGreaterThan(Date value) {
            addCriterion("last_login >", value, "lastLogin");
            return (Criteria) this;
        }

        public Criteria andLastLoginGreaterThanOrEqualTo(Date value) {
            addCriterion("last_login >=", value, "lastLogin");
            return (Criteria) this;
        }

        public Criteria andLastLoginLessThan(Date value) {
            addCriterion("last_login <", value, "lastLogin");
            return (Criteria) this;
        }

        public Criteria andLastLoginLessThanOrEqualTo(Date value) {
            addCriterion("last_login <=", value, "lastLogin");
            return (Criteria) this;
        }

        public Criteria andLastLoginIn(List<Date> values) {
            addCriterion("last_login in", values, "lastLogin");
            return (Criteria) this;
        }

        public Criteria andLastLoginNotIn(List<Date> values) {
            addCriterion("last_login not in", values, "lastLogin");
            return (Criteria) this;
        }

        public Criteria andLastLoginBetween(Date value1, Date value2) {
            addCriterion("last_login between", value1, value2, "lastLogin");
            return (Criteria) this;
        }

        public Criteria andLastLoginNotBetween(Date value1, Date value2) {
            addCriterion("last_login not between", value1, value2, "lastLogin");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIsNull() {
            addCriterion("created_at is null");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIsNotNull() {
            addCriterion("created_at is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedAtEqualTo(Date value) {
            addCriterion("created_at =", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotEqualTo(Date value) {
            addCriterion("created_at <>", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThan(Date value) {
            addCriterion("created_at >", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThanOrEqualTo(Date value) {
            addCriterion("created_at >=", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThan(Date value) {
            addCriterion("created_at <", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThanOrEqualTo(Date value) {
            addCriterion("created_at <=", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIn(List<Date> values) {
            addCriterion("created_at in", values, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotIn(List<Date> values) {
            addCriterion("created_at not in", values, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtBetween(Date value1, Date value2) {
            addCriterion("created_at between", value1, value2, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotBetween(Date value1, Date value2) {
            addCriterion("created_at not between", value1, value2, "createdAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIsNull() {
            addCriterion("updated_at is null");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIsNotNull() {
            addCriterion("updated_at is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtEqualTo(Date value) {
            addCriterion("updated_at =", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotEqualTo(Date value) {
            addCriterion("updated_at <>", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtGreaterThan(Date value) {
            addCriterion("updated_at >", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtGreaterThanOrEqualTo(Date value) {
            addCriterion("updated_at >=", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtLessThan(Date value) {
            addCriterion("updated_at <", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtLessThanOrEqualTo(Date value) {
            addCriterion("updated_at <=", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIn(List<Date> values) {
            addCriterion("updated_at in", values, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotIn(List<Date> values) {
            addCriterion("updated_at not in", values, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtBetween(Date value1, Date value2) {
            addCriterion("updated_at between", value1, value2, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotBetween(Date value1, Date value2) {
            addCriterion("updated_at not between", value1, value2, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andEmailLikeCaseInsensitive(String value) {
            addCriterion(" email ilike", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailStartsWithCaseInsensitive(String value) {
            addCriterion(" email ilike", value +  "%", "email");
            return (Criteria) this;
        }

        public Criteria andEmailEndsWithCaseInsensitive(String value) {
            addCriterion(" email ilike", "%" + value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailAnywhereCaseInsensitive(String value) {
            addCriterion(" email ilike", "%" + value + "%", "email");
            return (Criteria) this;
        }

        public Criteria andFirstNameLikeCaseInsensitive(String value) {
            addCriterion(" first_name ilike", value, "firstName");
            return (Criteria) this;
        }

        public Criteria andFirstNameStartsWithCaseInsensitive(String value) {
            addCriterion(" first_name ilike", value +  "%", "firstName");
            return (Criteria) this;
        }

        public Criteria andFirstNameEndsWithCaseInsensitive(String value) {
            addCriterion(" first_name ilike", "%" + value, "firstName");
            return (Criteria) this;
        }

        public Criteria andFirstNameAnywhereCaseInsensitive(String value) {
            addCriterion(" first_name ilike", "%" + value + "%", "firstName");
            return (Criteria) this;
        }

        public Criteria andLastNameLikeCaseInsensitive(String value) {
            addCriterion(" last_name ilike", value, "lastName");
            return (Criteria) this;
        }

        public Criteria andLastNameStartsWithCaseInsensitive(String value) {
            addCriterion(" last_name ilike", value +  "%", "lastName");
            return (Criteria) this;
        }

        public Criteria andLastNameEndsWithCaseInsensitive(String value) {
            addCriterion(" last_name ilike", "%" + value, "lastName");
            return (Criteria) this;
        }

        public Criteria andLastNameAnywhereCaseInsensitive(String value) {
            addCriterion(" last_name ilike", "%" + value + "%", "lastName");
            return (Criteria) this;
        }

        public Criteria andPhoneNumberLikeCaseInsensitive(String value) {
            addCriterion(" phone_number ilike", value, "phoneNumber");
            return (Criteria) this;
        }

        public Criteria andPhoneNumberStartsWithCaseInsensitive(String value) {
            addCriterion(" phone_number ilike", value +  "%", "phoneNumber");
            return (Criteria) this;
        }

        public Criteria andPhoneNumberEndsWithCaseInsensitive(String value) {
            addCriterion(" phone_number ilike", "%" + value, "phoneNumber");
            return (Criteria) this;
        }

        public Criteria andPhoneNumberAnywhereCaseInsensitive(String value) {
            addCriterion(" phone_number ilike", "%" + value + "%", "phoneNumber");
            return (Criteria) this;
        }

        public Criteria andEncryptedPasswordLikeCaseInsensitive(String value) {
            addCriterion(" encrypted_password ilike", value, "encryptedPassword");
            return (Criteria) this;
        }

        public Criteria andEncryptedPasswordStartsWithCaseInsensitive(String value) {
            addCriterion(" encrypted_password ilike", value +  "%", "encryptedPassword");
            return (Criteria) this;
        }

        public Criteria andEncryptedPasswordEndsWithCaseInsensitive(String value) {
            addCriterion(" encrypted_password ilike", "%" + value, "encryptedPassword");
            return (Criteria) this;
        }

        public Criteria andEncryptedPasswordAnywhereCaseInsensitive(String value) {
            addCriterion(" encrypted_password ilike", "%" + value + "%", "encryptedPassword");
            return (Criteria) this;
        }

        public Criteria andSaltLikeCaseInsensitive(String value) {
            addCriterion(" salt ilike", value, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltStartsWithCaseInsensitive(String value) {
            addCriterion(" salt ilike", value +  "%", "salt");
            return (Criteria) this;
        }

        public Criteria andSaltEndsWithCaseInsensitive(String value) {
            addCriterion(" salt ilike", "%" + value, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltAnywhereCaseInsensitive(String value) {
            addCriterion(" salt ilike", "%" + value + "%", "salt");
            return (Criteria) this;
        }

        public Criteria setFilters(Map<String, Map<String, Object>> filters) throws Exception {
            Iterator<Map.Entry<String, Map<String, Object>>> it = filters.entrySet().iterator();
            while (it.hasNext()) {
                Map.Entry<String, Map<String, Object>> entry = it.next();
                Map<String, Object> valueMap = entry.getValue();
                String col = entry.getKey();
                String type = getType(col);
                if (valueMap.containsKey("lt") && valueMap.containsKey("gt")) {
                    String methodName = getMethodName(col).concat("Between");
                    Class<?> c = GeneratedCriteria.class;
                    for (Method m : c.getMethods()) {
                        if (m.getName().equalsIgnoreCase(methodName)) {
                            m.invoke(this, valueMap.get("gt"), valueMap.get("lt"));
                            break;
                        }
                    }
                } else if (valueMap.containsKey("lt")) {
                    String methodName = getMethodName(col).concat("LessThanOrEqualTo");
                    Class<?> c = GeneratedCriteria.class;
                    for (Method m : c.getMethods()) {
                        if (m.getName().equalsIgnoreCase(methodName)) {
                            m.invoke(this, valueMap.get("lt"));
                            break;
                        }
                    }
                } else if (valueMap.containsKey("gt")) {
                    String methodName = getMethodName(col).concat("GreaterThanOrEqualTo");
                    Class<?> c = GeneratedCriteria.class;
                    for (Method m : c.getMethods()) {
                        if (m.getName().equalsIgnoreCase(methodName)) {
                            m.invoke(this, valueMap.get("gt"));
                            break;
                        }
                    }
                } else if (valueMap.containsKey("eq")) {
                    if (!type.equalsIgnoreCase("VARCHAR")) {
                        if (type.equalsIgnoreCase("INTEGER") || type.equalsIgnoreCase("SMALLINT")) {
                            String methodName = getMethodName(col).concat("EqualTo");
                            Class<?> c = GeneratedCriteria.class;
                            for (Method m : c.getMethods()) {
                                if (m.getName().equalsIgnoreCase(methodName)) {
                                    m.invoke(this, Integer.valueOf(valueMap.get("eq").toString()));
                                    break;
                                }
                            }
                        }
                        else if (type.equalsIgnoreCase("BIGINT")) {
                            String methodName = getMethodName(col).concat("EqualTo");
                            Class<?> c = GeneratedCriteria.class;
                            for (Method m : c.getMethods()) {
                                if (m.getName().equalsIgnoreCase(methodName)) {
                                    m.invoke(this, Long.valueOf(valueMap.get("eq").toString()));
                                    break;
                                }
                            }
                        }
                        else if (type.equalsIgnoreCase("REAL")) {
                            String methodName = getMethodName(col).concat("EqualTo");
                            Class<?> c = GeneratedCriteria.class;
                            for (Method m : c.getMethods()) {
                                if (m.getName().equalsIgnoreCase(methodName)) {
                                    m.invoke(this, new BigDecimal(valueMap.get("eq").toString()));
                                    break;
                                }
                            }
                        }
                        else if (type.equalsIgnoreCase("BIT")) {
                            String methodName = getMethodName(col).concat("EqualTo");
                            Class<?> c = GeneratedCriteria.class;
                            for (Method m : c.getMethods()) {
                                if (m.getName().equalsIgnoreCase(methodName)) {
                                    m.invoke(this, Boolean.valueOf(valueMap.get("eq").toString()));
                                    break;
                                }
                            }
                        }
                        else {
                            String methodName = getMethodName(col).concat("EqualTo");
                            Class<?> c = GeneratedCriteria.class;
                            for (Method m : c.getMethods()) {
                                if (m.getName().equalsIgnoreCase(methodName)) {
                                    m.invoke(this, valueMap.get("eq").toString());
                                    break;
                                }
                            }
                        }
                    } else {
                        String methodName = getMethodName(col).concat("AnywhereCaseInsensitive");
                        Class<?> c = GeneratedCriteria.class;
                        for (Method m : c.getMethods()) {
                            if (m.getName().equalsIgnoreCase(methodName)) {
                                m.invoke(this, valueMap.get("eq"));
                                break;
                            }
                        }
                    }
                }
            }
            return (Criteria) this;
        }

        private static String getMethodName(String col) {
            String methodName = "and";
            String fieldName = "";
            String[] parts = col.split("_");
            for (String part : parts) {
                fieldName = fieldName + part.substring(0, 1).toUpperCase() + part.substring(1).toLowerCase();
            }
            return methodName = methodName.concat(fieldName);
        }

        private static String getType(String field) {
            if (field.equalsIgnoreCase("id")) {
                return "BIGINT";
            }
            if (field.equalsIgnoreCase("national_id")) {
                return "INTEGER";
            }
            if (field.equalsIgnoreCase("email")) {
                return "VARCHAR";
            }
            if (field.equalsIgnoreCase("first_name")) {
                return "VARCHAR";
            }
            if (field.equalsIgnoreCase("last_name")) {
                return "VARCHAR";
            }
            if (field.equalsIgnoreCase("phone_number")) {
                return "VARCHAR";
            }
            if (field.equalsIgnoreCase("encrypted_password")) {
                return "VARCHAR";
            }
            if (field.equalsIgnoreCase("salt")) {
                return "VARCHAR";
            }
            if (field.equalsIgnoreCase("last_login")) {
                return "TIMESTAMP";
            }
            if (field.equalsIgnoreCase("created_at")) {
                return "TIMESTAMP";
            }
            if (field.equalsIgnoreCase("updated_at")) {
                return "TIMESTAMP";
            }
            return "";
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table accounts.users
     *
     * @mbggenerated do_not_delete_during_merge Wed Jun 29 14:01:54 EAT 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table accounts.users
     *
     * @mbggenerated Wed Jun 29 14:01:54 EAT 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}